import inspect
import sys
import importlib

def get_stdlib_components():
    """
    Generates a dictionary of Python standard library modules and their components.

    Returns:
        dict: A dictionary where keys are module names and values are
              dictionaries of component names and their types ('class' or 'function').
    """
    stdlib_components = {}

    if sys.version_info >= (3, 10):
        from sys import stdlib_module_names as stdlib_modules

    for module_name in sorted(stdlib_modules):
        try:
            module = importlib.import_module(module_name)
            components = {}
            for name, obj in inspect.getmembers(module):
                if inspect.isclass(obj):
                    components[name] = 'class'
                elif inspect.isfunction(obj):
                    components[name] = 'function'

            if components:
                stdlib_components[module_name] = components
        except ImportError:
            # Some modules are platform-specific and may not be available.
            pass

    return stdlib_components

if __name__ == '__main__':
    all_components = get_stdlib_components()

    # Print components for the 'collections' module as an example
    if 'collections' in all_components:
        import pprint
        pprint.pprint({'collections': all_components['collections']})
